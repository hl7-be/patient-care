"Id","Path","Slice Name","Alias(s)","Label","Min","Max","Must Support?","Is Modifier?","Is Summary?","Type(s)","Short","Definition","Comments","Requirements","Default Value","Meaning When Missing","Fixed Value","Pattern","Example","Minimum Value","Maximum Value","Maximum Length","Binding Strength","Binding Description","Binding Value Set","Code","Slicing Discriminator","Slicing Description","Slicing Ordered","Slicing Rules","Base Path","Base Min","Base Max","Condition(s)","Constraint(s)"
"BeModelCarePlan","BeModelCarePlan","","","",0,*,"","","","null {[]} {[]}
","BeModelCarePlan","Logical model for Care Plan.","","","","","","","","","",,,,,"",,,,"Base",0,*,"",""
"BeModelCarePlan.identifier","BeModelCarePlan.identifier","","","",0,*,"","","","Identifier {[]} {[]}
","Identifiers assigned to this care plan","Identifiers assigned to this care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.identifier",0,*,"",""
"BeModelCarePlan.name","BeModelCarePlan.name","","","",0,1,"","","","string {[]} {[]}
","Human-readable name for the care plan","Human-readable name for the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.name",0,1,"",""
"BeModelCarePlan.category","BeModelCarePlan.category","","","",0,*,"","","","CodeableConcept {[]} {[]}
","Type of plan","Type of plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.category",0,*,"",""
"BeModelCarePlan.basedOn","BeModelCarePlan.basedOn","","","",0,*,"","","","Reference {[]} {[]}
","Care plans that this care plan is based on","Care plans that this care plan is based on","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.basedOn",0,*,"",""
"BeModelCarePlan.partOf","BeModelCarePlan.partOf","","","",0,*,"","","","Reference {[]} {[]}
","Care plans that this care plan is part of","Care plans that this care plan is part of","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.partOf",0,*,"",""
"BeModelCarePlan.status","BeModelCarePlan.status","","","",0,1,"","","","code {[]} {[]}
","status of the care plan","status of the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.status",0,1,"",""
"BeModelCarePlan.description","BeModelCarePlan.description","","","",0,1,"","","","string {[]} {[]}
","Description of the care plan","Description of the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.description",0,1,"",""
"BeModelCarePlan.instantiates","BeModelCarePlan.instantiates","","","",0,*,"","","","Reference {[]} {[]}
","Protocol or definition that is instantiated by this care plan","Protocol or definition that is instantiated by this care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.instantiates",0,*,"",""
"BeModelCarePlan.subject","BeModelCarePlan.subject","","","",0,1,"","","","Reference {[]} {[]}
","Who care plan is for","Who care plan is for","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.subject",0,1,"",""
"BeModelCarePlan.period","BeModelCarePlan.period","","","",0,1,"","","","Period {[]} {[]}
","Time period plan covers","Time period plan covers","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.period",0,1,"",""
"BeModelCarePlan.author","BeModelCarePlan.author","","","",0,*,"","","","Reference {[]} {[]}
","Who is responsible for plan","Who is responsible for plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.author",0,*,"",""
"BeModelCarePlan.careTeam","BeModelCarePlan.careTeam","","","",0,*,"","","","Reference {[]} {[]}
","Care team assigned to the care plan","Care team assigned to the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.careTeam",0,*,"",""
"BeModelCarePlan.goal","BeModelCarePlan.goal","","","",0,*,"","","","Reference {[]} {[]}
","Expressed goals that this care plan is intended to achieve","Expressed goals that this care plan is intended to achieve","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.goal",0,*,"",""
"BeModelCarePlan.participant","BeModelCarePlan.participant","","","",0,*,"","","","BackboneElement {[]} {[]}
","Who is involved in the care plan","Who is involved in the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.participant",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
"
"BeModelCarePlan.participant.id","BeModelCarePlan.participant.id","","","",0,1,"","","","string {[]} {[]}
","Unique id for inter-element referencing","Unique id for the element within a resource (for internal references). This may be any string value that does not contain spaces.","","","","","","","","","",,,,,"",,,,"Element.id",0,1,"",""
"BeModelCarePlan.participant.extension","BeModelCarePlan.participant.extension","","extensions
user content","",0,*,"","","","Extension {[]} {[]}
","Additional content defined by implementations","May be used to represent additional information that is not part of the basic definition of the element. To make the use of extensions safe and manageable, there is a strict set of governance  applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension.","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","","","","","","","","",,,,,"","value:url}
","Extensions are always sliced by (at least) url",,"open","Element.extension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}"
"BeModelCarePlan.participant.modifierExtension","BeModelCarePlan.participant.modifierExtension","","extensions
user contentmodifiers","",0,*,"","Y","Y","Extension {[]} {[]}
","Extensions that cannot be ignored even if unrecognized","May be used to represent additional information that is not part of the basic definition of the element and that modifies the understanding of the element in which it is contained and/or the understanding of the containing element's descendants. Usually modifier elements provide negation or qualification. To make the use of extensions safe and manageable, there is a strict set of governance applied to the definition and use of extensions. Though any implementer can define an extension, there is a set of requirements that SHALL be met as part of the definition of the extension. Applications processing a resource are required to check for modifier extensions.

Modifier extensions SHALL NOT change the meaning of any elements on Resource or DomainResource (including cannot change the meaning of modifierExtension itself).","There can be no stigma associated with the use of extensions by any application, project, or standard - regardless of the institution or jurisdiction that uses or defines the extensions.  The use of extensions is what allows the FHIR specification to retain a core level of simplicity for everyone.","Modifier extensions allow for extensions that *cannot* be safely ignored to be clearly distinguished from the vast majority of extensions which can be safely ignored.  This promotes interoperability by eliminating the need for implementers to prohibit the presence of extensions. For further information, see the [definition of modifier extensions](http://hl7.org/fhir/R4/extensibility.html#modifierExtension).","","","","","","","",,,,,"",,,,"BackboneElement.modifierExtension",0,*,"","ele-1:All FHIR elements must have a @value or children {hasValue() or (children().count() > id.count())}
ext-1:Must have either extensions or value[x], not both {extension.exists() != value.exists()}"
"BeModelCarePlan.participant.role","BeModelCarePlan.participant.role","","","",0,1,"","","","CodeableConcept {[]} {[]}
","Type of involvement","Type of involvement","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.participant.role",0,1,"",""
"BeModelCarePlan.participant.member","BeModelCarePlan.participant.member","","","",1,1,"","","","Reference {[]} {[]}
","Who is involved","Who is involved","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.participant.member",1,1,"",""
"BeModelCarePlan.participant.period","BeModelCarePlan.participant.period","","","",0,1,"","","","Period {[]} {[]}
","Time period of involvement","Time period of involvement","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.participant.period",0,1,"",""
"BeModelCarePlan.managingOrganization","BeModelCarePlan.managingOrganization","","","",0,1,"","","","Reference {[]} {[]}
","Organization responsible for the care plan","Organization responsible for the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.managingOrganization",0,1,"",""
"BeModelCarePlan.contact","BeModelCarePlan.contact","","","",0,*,"","","","ContactPoint {[]} {[]}
","Contact details for the care plan","Contact details for the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.contact",0,*,"",""
"BeModelCarePlan.note","BeModelCarePlan.note","","","",0,*,"","","","string {[]} {[]}
","Comments about the care plan","Comments about the care plan","","","","","","","","","",,,,,"",,,,"BeModelCarePlan.note",0,*,"",""
